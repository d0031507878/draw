{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\ro_draw\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Layout/Header\";\nimport React, { useState, Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isClick, setIsClick] = useState(false);\n  const dummyData = [{\n    id: 1,\n    name: \"銘謝惠顧\",\n    percent: 80\n  }, {\n    id: 2,\n    name: \"A 恭喜\",\n    percent: 15\n  }, {\n    id: 3,\n    name: \"AAAAA 恭喜\",\n    percent: 5\n  }];\n\n  const getRandomNumber = () => {\n    let sortPrizes = dummyData.sort((a, b) => a.percent - b.percent);\n    console.log(sortPrizes);\n    let weightArray = sortPrizes.map((_, index) => {\n      //利用 .map 做一個計數累加\n      let count = 0;\n\n      for (let i = 0; i <= index; i++) {\n        count += sortPrizes[i].percent;\n      }\n\n      return count;\n    });\n    console.log(\"weightArray: \", weightArray);\n    let random = Math.random() * weightArray[weightArray.length - 1];\n    let index;\n\n    for (let i = 0; i <= weightArray.length; i++) {\n      if (weightArray[i] >= random) {\n        index = i;\n        break;\n      }\n    }\n\n    console.log(\"random: \", random);\n    console.log(\"index: \", index);\n    return sortPrizes[index].name;\n  };\n\n  const buttonClick = () => {\n    setIsClick(true);\n  };\n\n  const prize = getRandomNumber();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buttonClick,\n      children: \"Click Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isClick && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: prize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8fpkRQrdGGAYKNE6tk5KdUqo3Wo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","React","useState","Fragment","App","isClick","setIsClick","dummyData","id","name","percent","getRandomNumber","sortPrizes","sort","a","b","console","log","weightArray","map","_","index","count","i","random","Math","length","buttonClick","prize"],"sources":["D:/React/ro_draw/src/App.js"],"sourcesContent":["import Header from \"./components/Layout/Header\";\nimport React, { useState, Fragment } from \"react\";\n\nfunction App() {\n  const [isClick, setIsClick] = useState(false);\n\n   const dummyData = [\n    {\n      id: 1,\n      name: \"銘謝惠顧\",\n      percent: 80,\n    },\n    {\n      id: 2,\n      name: \"A 恭喜\",\n      percent: 15,\n    },\n    {\n      id: 3,\n      name: \"AAAAA 恭喜\",\n      percent: 5,\n    },\n  ];\n\n  const getRandomNumber = () => {\n    let sortPrizes = dummyData.sort((a, b) => a.percent - b.percent);\n    console.log(sortPrizes);\n    let weightArray = sortPrizes.map((_, index) => {\n      //利用 .map 做一個計數累加\n      let count = 0;\n      for (let i = 0; i <= index; i++) {\n        count += sortPrizes[i].percent;\n      }\n      return count;\n    });\n    console.log(\"weightArray: \", weightArray);\n    let random = Math.random() * weightArray[weightArray.length - 1];\n    let index;\n    for (let i = 0; i <= weightArray.length; i++) {\n      if (weightArray[i] >= random) {\n        index = i;\n        break;\n      }\n    }\n    console.log(\"random: \", random);\n    console.log(\"index: \", index);\n    return sortPrizes[index].name;\n  };\n\n  const buttonClick = () => {\n    setIsClick(true);\n  }\n\n  const prize = getRandomNumber();\n\n\n\n  return (\n    <React.Fragment>\n      <Header />\n      <button onClick={buttonClick}>Click Me!</button>\n      {isClick && <p>{prize}</p>}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;EAEC,MAAMK,SAAS,GAAG,CACjB;IACEC,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,MAFR;IAGEC,OAAO,EAAE;EAHX,CADiB,EAMjB;IACEF,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,MAFR;IAGEC,OAAO,EAAE;EAHX,CANiB,EAWjB;IACEF,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,UAFR;IAGEC,OAAO,EAAE;EAHX,CAXiB,CAAlB;;EAkBD,MAAMC,eAAe,GAAG,MAAM;IAC5B,IAAIC,UAAU,GAAGL,SAAS,CAACM,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,OAAF,GAAYK,CAAC,CAACL,OAAvC,CAAjB;IACAM,OAAO,CAACC,GAAR,CAAYL,UAAZ;IACA,IAAIM,WAAW,GAAGN,UAAU,CAACO,GAAX,CAAe,CAACC,CAAD,EAAIC,KAAJ,KAAc;MAC7C;MACA,IAAIC,KAAK,GAAG,CAAZ;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,KAArB,EAA4BE,CAAC,EAA7B,EAAiC;QAC/BD,KAAK,IAAIV,UAAU,CAACW,CAAD,CAAV,CAAcb,OAAvB;MACD;;MACD,OAAOY,KAAP;IACD,CAPiB,CAAlB;IAQAN,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,WAA7B;IACA,IAAIM,MAAM,GAAGC,IAAI,CAACD,MAAL,KAAgBN,WAAW,CAACA,WAAW,CAACQ,MAAZ,GAAqB,CAAtB,CAAxC;IACA,IAAIL,KAAJ;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,WAAW,CAACQ,MAAjC,EAAyCH,CAAC,EAA1C,EAA8C;MAC5C,IAAIL,WAAW,CAACK,CAAD,CAAX,IAAkBC,MAAtB,EAA8B;QAC5BH,KAAK,GAAGE,CAAR;QACA;MACD;IACF;;IACDP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,MAAxB;IACAR,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,KAAvB;IACA,OAAOT,UAAU,CAACS,KAAD,CAAV,CAAkBZ,IAAzB;EACD,CAvBD;;EAyBA,MAAMkB,WAAW,GAAG,MAAM;IACxBrB,UAAU,CAAC,IAAD,CAAV;EACD,CAFD;;EAIA,MAAMsB,KAAK,GAAGjB,eAAe,EAA7B;EAIA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEgB,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGtB,OAAO,iBAAI;MAAA,UAAIuB;IAAJ;MAAA;MAAA;MAAA;IAAA,QAHd;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA7DQxB,G;;KAAAA,G;AA+DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}