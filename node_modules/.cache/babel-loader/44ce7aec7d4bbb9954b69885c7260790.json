{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\ro_draw\\\\src\\\\components\\\\Draw_Item\\\\Draw.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyData = [{\n  id: 1,\n  name: \"銘謝惠顧\",\n  percent: 80\n}, {\n  id: 2,\n  name: \"A 恭喜\",\n  percent: 15\n}, {\n  id: 3,\n  name: \"AAAAA 恭喜\",\n  percent: 5\n}];\n\nconst Draw = () => {\n  _s();\n\n  const [isClick, setIsClick] = useState(false);\n  const [prize, setPrize] = useState(\"\");\n  let sortPrizes = dummyData.sort((a, b) => a.percent - b.percent);\n  console.log(sortPrizes);\n  let weightArray = sortPrizes.map((_, index) => {\n    //利用 .map 做一個計數累加\n    let count = 0;\n\n    for (let i = 0; i <= index; i++) {\n      count += sortPrizes[i].percent;\n    }\n\n    return count;\n  });\n  console.log(\"weightArray: \", weightArray);\n  let random = Math.random() * weightArray[weightArray.length - 1];\n  let index;\n\n  for (let i = 0; i <= weightArray.length; i++) {\n    if (weightArray[i] >= random) {\n      index = i;\n      break;\n    }\n  }\n\n  console.log(\"random: \", random);\n  console.log(\"index: \", index); //   return sortPrizes[index].name;\n\n  const buttonClick = () => {\n    setIsClick(true);\n    setPrize(getRandomNumber());\n  };\n\n  const resetButton = () => {\n    setIsClick(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buttonClick,\n      children: \" \\u9EDE\\u6211\\u62BD\\u734E! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetButton,\n      children: \" Reset !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isClick && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: prize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Draw, \"fdXcZLo99ciUnAVVsfKpIdVeV8M=\");\n\n_c = Draw;\nexport default Draw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"names":["React","useState","Fragment","dummyData","id","name","percent","Draw","isClick","setIsClick","prize","setPrize","sortPrizes","sort","a","b","console","log","weightArray","map","_","index","count","i","random","Math","length","buttonClick","getRandomNumber","resetButton"],"sources":["D:/React/ro_draw/src/components/Draw_Item/Draw.js"],"sourcesContent":["import React, { useState, Fragment } from \"react\";\r\n\r\nconst dummyData = [\r\n  {\r\n    id: 1,\r\n    name: \"銘謝惠顧\",\r\n    percent: 80,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"A 恭喜\",\r\n    percent: 15,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"AAAAA 恭喜\",\r\n    percent: 5,\r\n  },\r\n];\r\n\r\nconst Draw = () => {\r\n  const [isClick, setIsClick] = useState(false);\r\n  const [prize, setPrize] = useState(\"\");\r\n\r\n  let sortPrizes = dummyData.sort((a, b) => a.percent - b.percent);\r\n  console.log(sortPrizes);\r\n  let weightArray = sortPrizes.map((_, index) => {\r\n    //利用 .map 做一個計數累加\r\n    let count = 0;\r\n    for (let i = 0; i <= index; i++) {\r\n      count += sortPrizes[i].percent;\r\n    }\r\n    return count;\r\n  });\r\n  console.log(\"weightArray: \", weightArray);\r\n  let random = Math.random() * weightArray[weightArray.length - 1];\r\n  let index;\r\n  for (let i = 0; i <= weightArray.length; i++) {\r\n    if (weightArray[i] >= random) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  console.log(\"random: \", random);\r\n  console.log(\"index: \", index);\r\n  //   return sortPrizes[index].name;\r\n\r\n  const buttonClick = () => {\r\n    setIsClick(true);\r\n    setPrize(getRandomNumber());\r\n  };\r\n\r\n  const resetButton = () => {\r\n    setIsClick(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <button onClick={buttonClick}> 點我抽獎! </button>\r\n      <button onClick={resetButton}> Reset !</button>\r\n      {isClick && <p>{prize}</p>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Draw;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;AAEA,MAAMC,SAAS,GAAG,CAChB;EACEC,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE,MAFR;EAGEC,OAAO,EAAE;AAHX,CADgB,EAMhB;EACEF,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE,MAFR;EAGEC,OAAO,EAAE;AAHX,CANgB,EAWhB;EACEF,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE,UAFR;EAGEC,OAAO,EAAE;AAHX,CAXgB,CAAlB;;AAkBA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EAEA,IAAIW,UAAU,GAAGT,SAAS,CAACU,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACR,OAAF,GAAYS,CAAC,CAACT,OAAvC,CAAjB;EACAU,OAAO,CAACC,GAAR,CAAYL,UAAZ;EACA,IAAIM,WAAW,GAAGN,UAAU,CAACO,GAAX,CAAe,CAACC,CAAD,EAAIC,KAAJ,KAAc;IAC7C;IACA,IAAIC,KAAK,GAAG,CAAZ;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,KAArB,EAA4BE,CAAC,EAA7B,EAAiC;MAC/BD,KAAK,IAAIV,UAAU,CAACW,CAAD,CAAV,CAAcjB,OAAvB;IACD;;IACD,OAAOgB,KAAP;EACD,CAPiB,CAAlB;EAQAN,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,WAA7B;EACA,IAAIM,MAAM,GAAGC,IAAI,CAACD,MAAL,KAAgBN,WAAW,CAACA,WAAW,CAACQ,MAAZ,GAAqB,CAAtB,CAAxC;EACA,IAAIL,KAAJ;;EACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,WAAW,CAACQ,MAAjC,EAAyCH,CAAC,EAA1C,EAA8C;IAC5C,IAAIL,WAAW,CAACK,CAAD,CAAX,IAAkBC,MAAtB,EAA8B;MAC5BH,KAAK,GAAGE,CAAR;MACA;IACD;EACF;;EACDP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,MAAxB;EACAR,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,KAAvB,EAxBiB,CAyBjB;;EAEA,MAAMM,WAAW,GAAG,MAAM;IACxBlB,UAAU,CAAC,IAAD,CAAV;IACAE,QAAQ,CAACiB,eAAe,EAAhB,CAAR;EACD,CAHD;;EAKA,MAAMC,WAAW,GAAG,MAAM;IACxBpB,UAAU,CAAC,KAAD,CAAV;EACD,CAFD;;EAIA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAQ,OAAO,EAAEkB,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEE,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGrB,OAAO,iBAAI;MAAA,UAAIE;IAAJ;MAAA;MAAA;MAAA;IAAA,QAHd;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA3CD;;GAAMH,I;;KAAAA,I;AA6CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}